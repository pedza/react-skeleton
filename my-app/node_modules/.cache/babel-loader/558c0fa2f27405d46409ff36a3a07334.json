{"ast":null,"code":"var _jsxFileName = \"F:\\\\Developer stvari 2 da se vidi so originalot\\\\ReactRepo\\\\my-app\\\\src\\\\componentAPICall.js\";\nimport React, { Component } from 'react';\nimport App from './app';\n\nclass APIcall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Skopje&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\").then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 20\n        }\n      }, \"Erorr:\", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 16\n        }\n      }, \" \", items.map(item => /*#__PURE__*/React.createElement(App, {\n        key: item.key,\n        text: item.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 40\n        }\n      })), \" \");\n    }\n  }\n\n}\n\nexport default APIcall;","map":{"version":3,"sources":["F:/Developer stvari 2 da se vidi so originalot/ReactRepo/my-app/src/componentAPICall.js"],"names":["React","Component","App","APIcall","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","console","log","setState","render","message","map","item","key","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAGA,MAAMC,OAAN,SAAsBF,SAAtB,CACA;AACIG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAC;AAHG,KAAb;AAKH;;AAELC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,KAAK,CAAC,6GAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAKG,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM;AAFG,OAAd;AAIH,KATT,EAUSR,KAAD,IAAS;AACL,WAAKW,QAAL,CAAc;AACVV,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAfT;AAiBH;;AAEGY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACZ,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKH,KAAvC;;AACA,QAAGC,KAAH,EAAS;AACL,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYA,KAAK,CAACa,OAAlB,CAAP;AACH,KAFD,MAGK,IAAG,CAACZ,QAAJ,EAAa;AACd,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH,KAFI,MAGD;AACA,0BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMC,KAAK,CAACY,GAAN,CAAUC,IAAI,iBAAI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAoB,QAAA,IAAI,EAAED,IAAI,CAACE,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB,CAAN,MADH;AAGH;AACJ;;AA3CL;;AAgDA,eAAerB,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport App from './app'\r\n\r\n\r\nclass APIcall extends Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items:[]\r\n        }\r\n    }\r\n\r\ncomponentDidMount(){\r\n    fetch(\"http://api.openweathermap.org/data/2.5/weather?q=Skopje&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: result\r\n                });\r\n            },\r\n            (error)=>{\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n            )\r\n}\r\n\r\n    render(){\r\n        const {error, isLoaded, items } = this.state;\r\n        if(error){\r\n            return <div>Erorr:{error.message}</div>\r\n        }\r\n        else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            return (\r\n               <li> {items.map(item => <App key={item.key} text={item.value} />)} </li>\r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default APIcall\r\n"]},"metadata":{},"sourceType":"module"}