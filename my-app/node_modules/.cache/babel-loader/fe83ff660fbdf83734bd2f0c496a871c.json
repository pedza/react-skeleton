{"ast":null,"code":"var _jsxFileName = \"F:\\\\Developer stvari 2 da se vidi so originalot\\\\ReactRepo\\\\my-app\\\\src\\\\componentAPICall.js\";\nimport React, { Component } from 'react'; // import ReactDOM from 'react-dom';\n\nimport App from './app';\n\nclass APIcall extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n      url: \"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.urls + \"&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\"\n    };\n    {\n      console.log(this.state.url);\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData(this.state.url);\n  }\n\n  fetchData(url) {\n    fetch(url).then(res => res.json()).then(result => {\n      console.log(result);\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  } // componentWillUnmount()\n  // {\n  //     {console.log(this.state.url)}\n  // }\n\n\n  timeStampFunction(unix) {\n    let date = new Date(unix * 1000);\n    let toUTCstring = date.toUTCString();\n    let splitUTCString = toUTCstring.split(\",\", 1);\n    let time = toUTCstring.slice(-11, -4);\n    let day = date.getDay();\n    console.log(splitUTCString);\n    let todayDate = new Date();\n    let today = todayDate.getDay();\n    console.log(today);\n    let month = date.getMonth();\n    splitUTCString.forEach(dayInWeek => {\n      switch (dayInWeek) {\n        case dayInWeek === \"Mon\":\n          console.log(dayInWeek);\n          day = \"Monday\";\n          break;\n\n        default:\n          day = \"no such day\";\n      }\n    });\n    return day;\n  }\n\n  componentDidUpdate(prevProps) {\n    let deafulturl = \"http://api.openweathermap.org/data/2.5/weather?q=skopje&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\";\n\n    if (prevProps.urls != this.props.urls) {\n      this.fetchData(\"http://api.openweathermap.org/data/2.5/weather?q=\" + this.props.urls + \"&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\");\n      console.log(prevProps);\n      console.log(this.props.urls);\n    }\n  }\n\n  render() {\n    {\n      console.log(this.state.url);\n    }\n    ;\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    const {\n      main,\n      weather,\n      sys,\n      dt\n    } = items;\n\n    if (this.state.error != null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }\n      }, error.message);\n    }\n\n    let weatherIcon = function (array) {\n      for (let index = 0; index < array.length; index++) {\n        let childArray = array[index];\n        return childArray.icon;\n        console.log(childArray.icon.key);\n      }\n    }; // let icon = \n    // let url = \"http://openweathermap.org/img/w/\"+{icon}+\".png\"\n    // console.log(temp)\n    // console.log(main);\n\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 20\n        }\n      }, \"Erorr:\", error.message);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 20\n        }\n      }, \"Loading...\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, this.timeStampFunction(dt)), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/w/\" + weatherIcon(weather) + \".png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, items.name, \" \", sys.country), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, \" \", Math.round(main.temp), \" \\u2103\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, \"RealFeel \", Math.round(main.feels_like), \" \\u2103\"));\n    }\n  }\n\n}\n\nexport default APIcall; // ReactDOM.render(<APIcall />, document.getElementById('root'));","map":{"version":3,"sources":["F:/Developer stvari 2 da se vidi so originalot/ReactRepo/my-app/src/componentAPICall.js"],"names":["React","Component","App","APIcall","constructor","props","state","error","isLoaded","items","url","urls","console","log","componentDidMount","fetchData","fetch","then","res","json","result","setState","timeStampFunction","unix","date","Date","toUTCstring","toUTCString","splitUTCString","split","time","slice","day","getDay","todayDate","today","month","getMonth","forEach","dayInWeek","componentDidUpdate","prevProps","deafulturl","render","main","weather","sys","dt","message","weatherIcon","array","index","length","childArray","icon","key","name","country","Math","round","temp","feels_like"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n// import ReactDOM from 'react-dom';\r\nimport App from './app'\r\n\r\n\r\nclass APIcall extends Component\r\n{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items:[],\r\n            url: \"http://api.openweathermap.org/data/2.5/weather?q=\"+this.props.urls+\"&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\"\r\n        }\r\n        {console.log(this.state.url)}\r\n    }\r\n\r\ncomponentDidMount(){\r\n    this.fetchData(this.state.url)\r\n}\r\n\r\nfetchData(url){\r\n\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                console.log(result)\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    \r\n                    items: result\r\n                   \r\n                });\r\n               \r\n            },\r\n            (error)=>{\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    error\r\n                });\r\n            }\r\n            )\r\n\r\n}\r\n\r\n// componentWillUnmount()\r\n// {\r\n   \r\n//     {console.log(this.state.url)}\r\n// }\r\ntimeStampFunction(unix){\r\n    let date = new Date(unix*1000);\r\n    let toUTCstring = date.toUTCString();\r\n    let splitUTCString = toUTCstring.split(\",\", 1);\r\n    let time = toUTCstring.slice(-11, -4);\r\n    let day = date.getDay()\r\n    console.log(splitUTCString)\r\n    let todayDate = new Date()\r\n    let today = todayDate.getDay()\r\n    console.log(today);\r\n    let month= date.getMonth()\r\n    splitUTCString.forEach(dayInWeek => {\r\n         \r\n        switch(dayInWeek){\r\n           \r\n            case (dayInWeek === \"Mon\"):\r\n                console.log(dayInWeek) \r\n                day = \"Monday\"\r\n            \r\n            break;\r\n            default: day = \"no such day\"\r\n        }\r\n    });\r\n    \r\n    \r\n    return day\r\n    \r\n}\r\n\r\ncomponentDidUpdate(prevProps){\r\n    let deafulturl= \"http://api.openweathermap.org/data/2.5/weather?q=skopje&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\"\r\n    if (prevProps.urls != this.props.urls){\r\n        \r\n        this.fetchData(\"http://api.openweathermap.org/data/2.5/weather?q=\"+this.props.urls+\"&units=metric&appid=5028b23243c12ce9c01337e4bf4ea0ae\")\r\n        console.log(prevProps)\r\n        console.log(this.props.urls)\r\n    }\r\n}\r\n\r\n    render(){\r\n        \r\n        {console.log(this.state.url)};\r\n        const {error, isLoaded, items} = this.state;\r\n        const {main, weather, sys, dt} = items;\r\n\r\n        if(this.state.error != null){\r\n            return <div>{error.message}</div>\r\n        \r\n        }\r\n        \r\n        let weatherIcon = function(array){\r\n            for (let index = 0; index < array.length; index++) {\r\n                \r\n\r\n                let childArray=array[index];\r\n                return childArray.icon\r\n                console.log(childArray.icon.key);\r\n                \r\n            \r\n                \r\n            }\r\n        }\r\n        // let icon = \r\n        // let url = \"http://openweathermap.org/img/w/\"+{icon}+\".png\"\r\n        // console.log(temp)\r\n        // console.log(main);\r\n        if(error){\r\n            return <div>Erorr:{error.message}</div>\r\n        }\r\n        else if(!isLoaded){\r\n            return <div>Loading...</div>\r\n        }\r\n        else{\r\n            return (\r\n            <ul>\r\n\r\n                <li>\r\n                    {this.timeStampFunction(dt)}\r\n                </li>\r\n\r\n                <li>\r\n                    \r\n                    <img src={\"http://openweathermap.org/img/w/\"+weatherIcon(weather)+\".png\"}>\r\n                    </img>\r\n                </li>\r\n                <li>{items.name} {sys.country}</li>\r\n                <li> {Math.round(main.temp)} &#8451;</li>\r\n                <li>RealFeel {Math.round(main.feels_like)} &#8451;</li>\r\n            </ul>   \r\n            )\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default APIcall\r\n// ReactDOM.render(<APIcall />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}